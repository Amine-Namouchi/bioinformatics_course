Quality filtering of reads
==========================

#####################
Reads quality control
#####################

FastQC performs some quality control checks on raw sequence data coming from high throughput sequencing pipelines. It provides a modular set of analyses which you can use to give a quick impression of whether your data has any problems of which you should be aware before doing any further analysis.
::

  fastqc filename.fastq.gz

- *Note*: if you want to analyze multiple fastq files you can run fastqc as follow:
  ::
    fastqc *.fastq.gz

After completing, fastqc generates for each fastq file a summary report as follow:

.. image:: fastqc.png


#######################
Reads quality filtering
#######################

Reads filtering is a crucial step as it will affect all downstream analyses. One of the important things to do is to treim the adapters that were used during the library preparation and sequencing. For this step we will use the program _**AdapterRemoval**_, which performs adapter trimming of sequencing reads and subsequent merging of paired-end reads with negative insert sizes (an overlap between two sequencing reads derived from asingle DNA fragment) into a single collapsed read. Here we have single-end reads, so we are going to just trim the adapters:
::

  AdapterRemoval --file1 filename.fastq.gz --basename filename --minlength 30 --trimns --trimqualities --gzip

Here some useful options of AdaptorRemoval:

================================= ========
Option                            Function
================================= ========
*-file1* <string>                 Forward reads input file(s) in fastq(.gz) file format. Required option (single-end reads). 
*-file2* <string>                 Reverse reads input file(s) in fastq(.gz) file format. 
*--basename* <string>             Default prefix for all output files for which no filename was explicitly set [current: your_output]
*--adapter1* <sequence>           Adapter sequence expected to be found in mate 1 reads [current: AGATCGGAAGAGCACACGTCTGAACTCCAGTCACNNNNNNATCTCGTATGCCGTCTTCTGCTTG]
*--adapter2* <sequence>           Adapter sequence expected to be found in mate 2 reads [current: AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT]
*--trimns*                        If set, trim ambiguous bases (N) at 5'/3' termini [current: off]
*--trimqualities*                 If set, trim bases at 5'/3' termini with quality scores <= to --minquality value [current: off]
*--minquality* <integer>          PHRED inclusive minimum values; see --trimqualities for details [current: 2]
*--minlength* <integer>           Reads shorter than this length are discarded following trimming [current: 15].
*--collapse*                      When set, paired ended read alignments of --minalignmentlength or more bases are combined into a single consensus sequence, representing the complete insert
*--minalignmentlength** <integer> If --collapse is set, paired reads must overlap at least this number of bases to be collapsed, and single-ended reads must overlap at least this number of bases with the adapter to be considered complete template molecules [current: 11].
================================= ========

- *Note 1*: Here we are using a Single-End library, for pair-end libraries the command to clip the adapter and merge the read pairs is: 
  ::

    AdapterRemoval --file1 filename_R1.fastq --file2 filename_R2.fastq --basename filename --minlength 30 --trimns --trimqualities --collapse --gzip

- *Note 2*: Several tools can be used for reads pre-processing and filtering, for examples *ClipAndMerge* (https://github.com/apeltzer/ClipAndMerge), *LeeHom* (https://github.com/grenaud/leeHom), *Atropos* (https://github.com/jdidion/atropos) and *Fastp* (https://github.com/OpenGene/fastp).

After reads filtering open your adapter-trimmed fastq file again in FastQC and see the differences before and after adapter trimming. 
